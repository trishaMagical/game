{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chat(_ref) {\n  var socket = _ref.socket,\n      username = _ref.username,\n      room = _ref.room;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMessage = _useState2[0],\n      setCurrentMessage = _useState2[1];\n\n  var sendMessage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (currentMessage !== \"\") {\n        var messageData = {\n          room: room,\n          author: username,\n          message: currentMessage,\n          time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n        };\n        yield socket.emit(\"send_message\", messageData);\n      }\n    });\n\n    return function sendMessage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect;\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.chatheader,\n      children: _jsx(Text, {\n        children: \"Join A Chat\"\n      })\n    }), _jsx(View, {\n      style: styles.chatbody\n    }), _jsx(View, {\n      style: styles.chatfooter,\n      children: _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Write Down Message...\",\n        onChangeText: setCurrentMessage,\n        value: currentMessage\n      })\n    }), _jsx(Button, {\n      onPress: sendMessage,\n      title: \"Press Here\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  chatheader: {},\n  chatbody: {},\n  chatfooter: {},\n  textInput: {\n    padding: 4,\n    borderColor: \"black\",\n    borderWidth: 4,\n    marginBottom: 3\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Chat","socket","username","room","currentMessage","setCurrentMessage","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","styles","chatheader","chatbody","chatfooter","textInput","StyleSheet","create","padding","borderColor","borderWidth","marginBottom"],"sources":["C:/Users/Trisha/Desktop/DemoAppSocketIo/client/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { View, Text, StyleSheet, TouchableWithoutFeedback, Button, TextInput } from 'react-native';\r\n\r\n\r\nexport default function Chat({ socket,username,room}) {\r\n    const [currentMessage,setCurrentMessage] = useState(\"\");\r\n    \r\n    const sendMessage = async() =>{\r\n        if(currentMessage !== \"\"){\r\n            const messageData ={\r\n                room: room,\r\n                author: username,\r\n                message: currentMessage,\r\n                time: new Date(Date.now()).getHours() +\r\n                \":\" +\r\n                new Date(Date.now()).getMinutes(),\r\n            };\r\n           await socket.emit(\"send_message\", messageData);\r\n         \r\n        }\r\n    };\r\n    useEffect\r\n    return (\r\n        <View>\r\n            <View style={styles.chatheader}>\r\n                <Text>Join A Chat</Text>\r\n            </View>\r\n            <View style={styles.chatbody}>\r\n                \r\n            </View>\r\n            <View style={styles.chatfooter}>\r\n               <TextInput \r\n                style={styles.textInput}\r\n                placeholder='Write Down Message...'\r\n                onChangeText={setCurrentMessage}\r\n                value={currentMessage}\r\n               \r\n               />\r\n\r\n            </View>\r\n            <Button \r\n                onPress={sendMessage}\r\n                title='Press Here'\r\n            />\r\n        </View>\r\n        \r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    \r\n    chatheader:{\r\n\r\n    },\r\n    chatbody:{\r\n\r\n    },\r\n    chatfooter:{\r\n\r\n    },\r\n    textInput:{\r\n        //backgroundColor:\"green\",\r\n        padding:4,\r\n        borderColor:\"black\",\r\n        borderWidth:4,\r\n        marginBottom:3\r\n      },\r\n})"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;AAIA,eAAe,SAASC,IAAT,OAAuC;EAAA,IAAvBC,MAAuB,QAAvBA,MAAuB;EAAA,IAAhBC,QAAgB,QAAhBA,QAAgB;EAAA,IAAPC,IAAO,QAAPA,IAAO;;EAClD,gBAA2CJ,QAAQ,CAAC,EAAD,CAAnD;EAAA;EAAA,IAAOK,cAAP;EAAA,IAAsBC,iBAAtB;;EAEA,IAAMC,WAAW;IAAA,8BAAG,aAAU;MAC1B,IAAGF,cAAc,KAAK,EAAtB,EAAyB;QACrB,IAAMG,WAAW,GAAE;UACfJ,IAAI,EAAEA,IADS;UAEfK,MAAM,EAAEN,QAFO;UAGfO,OAAO,EAAEL,cAHM;UAIfM,IAAI,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,QAArB,KACN,GADM,GAEN,IAAIF,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBE,UAArB;QANe,CAAnB;QAQD,MAAMb,MAAM,CAACc,IAAP,CAAY,cAAZ,EAA4BR,WAA5B,CAAN;MAEF;IACJ,CAbgB;;IAAA,gBAAXD,WAAW;MAAA;IAAA;EAAA,GAAjB;;EAcAR,SAAS;EACT,OACI,MAAC,IAAD;IAAA,WACI,KAAC,IAAD;MAAM,KAAK,EAAEkB,MAAM,CAACC,UAApB;MAAA,UACI,KAAC,IAAD;QAAA;MAAA;IADJ,EADJ,EAII,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE;IAApB,EAJJ,EAOI,KAAC,IAAD;MAAM,KAAK,EAAEF,MAAM,CAACG,UAApB;MAAA,UACG,KAAC,SAAD;QACC,KAAK,EAAEH,MAAM,CAACI,SADf;QAEC,WAAW,EAAC,uBAFb;QAGC,YAAY,EAAEf,iBAHf;QAIC,KAAK,EAAED;MAJR;IADH,EAPJ,EAiBI,KAAC,MAAD;MACI,OAAO,EAAEE,WADb;MAEI,KAAK,EAAC;IAFV,EAjBJ;EAAA,EADJ;AAyBH;AAGD,IAAMU,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAE7BL,UAAU,EAAC,EAFkB;EAK7BC,QAAQ,EAAC,EALoB;EAQ7BC,UAAU,EAAC,EARkB;EAW7BC,SAAS,EAAC;IAENG,OAAO,EAAC,CAFF;IAGNC,WAAW,EAAC,OAHN;IAINC,WAAW,EAAC,CAJN;IAKNC,YAAY,EAAC;EALP;AAXmB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { BlockList } from 'net';\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chat(_ref) {\n  var socket = _ref.socket,\n      username = _ref.username,\n      room = _ref.room;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMessage = _useState2[0],\n      setCurrentMessage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messageList = _useState4[0],\n      setMessageList = _useState4[1];\n\n  var sendMessage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (currentMessage !== \"\") {\n        var messageData = {\n          room: room,\n          author: username,\n          message: currentMessage,\n          time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n        };\n        yield socket.emit(\"send_message\", messageData);\n        setMessageList(function (list) {\n          return [].concat(_toConsumableArray(list), [messageData]);\n        });\n        setCurrentMessage(\"\");\n      }\n    });\n\n    return function sendMessage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    socket.on(\"recived_message\", function (data) {\n      console.log(\"Data\", data);\n      setMessageList(function (list) {\n        return [].concat(_toConsumableArray(list), [data]);\n      });\n    });\n  }, [socket]);\n  return _jsx(View, {\n    style: styles.mainContainer,\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.chatheader,\n        children: [username, _jsx(Text, {\n          style: styles.headerText,\n          children: \"Join A Chat\"\n        })]\n      }), _jsx(View, {\n        style: styles.chatbody,\n        children: messageList.map(function (messageContent) {\n          return _jsx(View, {\n            style: styles.message,\n            id: username === messageContent.author ? \"you\" : \"other\",\n            children: _jsxs(View, {\n              children: [_jsx(View, {\n                style: styles.messageContent,\n                children: _jsx(View, {\n                  children: messageContent.message\n                })\n              }), _jsxs(View, {\n                style: styles.messageMeta,\n                children: [_jsx(View, {\n                  children: messageContent.time\n                }), _jsx(View, {\n                  children: messageContent.author\n                })]\n              })]\n            })\n          });\n        })\n      }), _jsx(View, {\n        style: styles.chatfooter,\n        children: _jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"Write Down Message...\",\n          onChangeText: setCurrentMessage,\n          value: currentMessage,\n          onKeyPress: function onKeyPress(event) {\n            event.key === \"Enter\" && sendMessage();\n          }\n        })\n      }), _jsx(Button, {\n        styles: styles.buttonTab,\n        onPress: sendMessage,\n        title: \"Press Here\"\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    marginTop: 200,\n    borderWidth: 3,\n    marginBottom: 10,\n    marginRight: 120,\n    marginLeft: 120,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  chatheader: {\n    color: \"red\",\n    alignItems: \"center\",\n    font: font\n  },\n  chatbody: {},\n  chatfooter: {},\n  textInput: {\n    padding: 4,\n    borderColor: \"black\",\n    borderWidth: 4,\n    marginBottom: 3\n  },\n  buttonTab: {\n    marginBottom: 10\n  },\n  container: {\n    flex: 1,\n    marginTop: 15,\n    marginBottom: 50,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["BlockList","React","useEffect","useState","Chat","socket","username","room","currentMessage","setCurrentMessage","messageList","setMessageList","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","emit","list","on","data","console","log","styles","mainContainer","container","chatheader","headerText","chatbody","map","messageContent","messageMeta","chatfooter","textInput","event","key","buttonTab","StyleSheet","create","flex","marginTop","borderWidth","marginBottom","marginRight","marginLeft","alignItems","justifyContent","color","font","padding","borderColor","backgroundColor"],"sources":["C:/Users/Trisha/Desktop/DemoAppSocketIo/client/Chat.js"],"sourcesContent":["import { BlockList } from 'net';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { View, Text, StyleSheet, TouchableWithoutFeedback, Button, TextInput } from 'react-native';\r\n\r\n\r\nexport default function Chat({ socket, username, room }) {\r\n    const [currentMessage, setCurrentMessage] = useState(\"\");\r\n    const [messageList, setMessageList] = useState([]);\r\n    const sendMessage = async () => {\r\n        if (currentMessage !== \"\") {\r\n            const messageData = {\r\n                room: room,\r\n                author: username,\r\n                message: currentMessage,\r\n                time: new Date(Date.now()).getHours() +\r\n                    \":\" +\r\n                    new Date(Date.now()).getMinutes(),\r\n            };\r\n            await socket.emit(\"send_message\", messageData);\r\n            setMessageList((list) => [...list, messageData])\r\n            setCurrentMessage(\"\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        socket.on(\"recived_message\", (data) => {\r\n            console.log(\"Data\", data);\r\n            setMessageList((list) => [...list, data])\r\n        })\r\n    }, [socket])\r\n    return (\r\n        <View style={styles.mainContainer}>\r\n            <View style={styles.container}>\r\n                <View style={styles.chatheader}>\r\n                    {username}\r\n                    <Text style={styles.headerText}>Join A Chat</Text>\r\n\r\n                </View>\r\n                <View style={styles.chatbody}>\r\n                    {\r\n                        messageList.map((messageContent) =>\r\n                            <View style={styles.message} id={username === messageContent.author ? \"you\" : \"other\"}>\r\n\r\n                                <View>\r\n                                    <View style={styles.messageContent}>\r\n                                        <View>{messageContent.message}</View>\r\n                                    </View>\r\n                                    <View style={styles.messageMeta}>\r\n                                        <View>{messageContent.time}</View>\r\n                                        <View>{messageContent.author}</View>\r\n                                    </View>\r\n                                </View>\r\n\r\n                            </View>)\r\n                    }\r\n\r\n\r\n                </View>\r\n                <View style={styles.chatfooter}>\r\n                    <TextInput\r\n                        style={styles.textInput}\r\n                        placeholder='Write Down Message...'\r\n                        onChangeText={setCurrentMessage}\r\n                        value={currentMessage}\r\n                        onKeyPress={(event) => {\r\n                            event.key === \"Enter\" && sendMessage();\r\n                        }}\r\n\r\n                    />\r\n\r\n                </View>\r\n                <Button\r\n                    styles={styles.buttonTab}\r\n                    onPress={sendMessage}\r\n                    title='Press Here'\r\n                />\r\n            </View>\r\n\r\n        </View>\r\n\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    mainContainer: {\r\n        flex: 1,\r\n        marginTop: 200,\r\n        borderWidth: 3,\r\n        marginBottom: 10,\r\n        marginRight: 120,\r\n        marginLeft: 120,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    chatheader: {\r\n        color:\"red\",\r\n        alignItems:\"center\",\r\n        font\r\n    },\r\n    chatbody: {\r\n\r\n    },\r\n    chatfooter: {\r\n\r\n    },\r\n    textInput: {\r\n        //backgroundColor:\"green\",\r\n        padding: 4,\r\n        borderColor: \"black\",\r\n        borderWidth: 4,\r\n        marginBottom: 3\r\n    },\r\n    buttonTab: {\r\n        marginBottom: 10,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        marginTop: 15,\r\n        marginBottom:50,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}
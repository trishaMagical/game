{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport io from 'socket.io-client';\nimport Chat from \"./Chat\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar socket = io.connect(\"http://localhost:3005\");\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      room = _useState4[0],\n      setRoom = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showChat = _useState6[0],\n      setShowChat = _useState6[1];\n\n  var joinRoom = function joinRoom() {\n    if (username !== \"\" && room !== \"\") {\n      socket.emit(\"join_room\", room);\n      setShowChat(true);\n    }\n  };\n\n  return _jsx(View, {\n    children: !showChat ? _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        children: \"Join A Chat\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Write Down Name...\",\n        onChangeText: setUsername,\n        value: username\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Write Down Room Name...\",\n        onChangeText: setRoom,\n        value: room\n      }), _jsx(Button, {\n        onPress: joinRoom,\n        title: \"Join A Room\",\n        color: \"#009933\"\n      })]\n    }) : _jsx(Chat, {\n      socket: socket,\n      username: username,\n      room: room\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 15,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  textInput: {\n    backgroundColor: \"yellow\",\n    padding: 4,\n    borderColor: \"black\",\n    borderWidth: 4,\n    marginBottom: 3\n  }\n});","map":{"version":3,"names":["StatusBar","useState","io","Chat","socket","connect","App","username","setUsername","room","setRoom","showChat","setShowChat","joinRoom","emit","styles","container","textInput","StyleSheet","create","flex","marginTop","backgroundColor","alignItems","justifyContent","padding","borderColor","borderWidth","marginBottom"],"sources":["C:/Users/Trisha/Desktop/DemoAppSocketIo/client/App.js"],"sourcesContent":[" import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { Button, StyleSheet, Text, TextInput, View } from 'react-native';\nimport io from 'socket.io-client';\nimport Chat from './Chat';\n\nconst socket = io. connect(\"http://localhost:3005\")\n\nexport default function App() {\n  const [username,setUsername] =useState(\"\");\n  const [room,setRoom] =useState(\"\");\n  const [showChat,setShowChat] =useState(false);\n  \n\n\n  const joinRoom = () =>{\n    if(username !==\"\" && room !==\"\"){\n      socket.emit(\"join_room\", room);\n      setShowChat(true);\n    }\n  }\n  return (\n    <View>\n      { !showChat ? (\n        \n      <View style={styles.container}>\n     <Text>Join A Chat</Text>\n     <TextInput \n     style={styles.textInput}\n      placeholder='Write Down Name...'\n      onChangeText={setUsername}\n      value={username}\n\n\n     />\n     <TextInput \n      style={styles.textInput}\n      placeholder='Write Down Room Name...'\n      onChangeText={setRoom}\n      value={room}\n\n\n     />\n      <Button  \n          onPress={joinRoom}\n          title=\"Join A Room\"  \n          color=\"#009933\"  \n                    />\n      </View>\n                    )\n        : (\n        <Chat socket={socket} username={username} room={room}/>\n      \n        )}\n\n    </View>\n    \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop:15,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  textInput:{\n    backgroundColor:\"yellow\",\n    padding:4,\n    borderColor:\"black\",\n    borderWidth:4,\n    marginBottom:3\n  },\n  \n});\n"],"mappings":";AAAC,SAASA,SAAT,QAA0B,iBAA1B;AACD,SAASC,QAAT,QAAyB,OAAzB;;;;;;AAEA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,IAAP;;;AAEA,IAAMC,MAAM,GAAGF,EAAE,CAAEG,OAAJ,CAAY,uBAAZ,CAAf;AAEA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAA8BL,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOM,QAAP;EAAA,IAAgBC,WAAhB;;EACA,iBAAsBP,QAAQ,CAAC,EAAD,CAA9B;EAAA;EAAA,IAAOQ,IAAP;EAAA,IAAYC,OAAZ;;EACA,iBAA8BT,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOU,QAAP;EAAA,IAAgBC,WAAhB;;EAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;IACpB,IAAGN,QAAQ,KAAI,EAAZ,IAAkBE,IAAI,KAAI,EAA7B,EAAgC;MAC9BL,MAAM,CAACU,IAAP,CAAY,WAAZ,EAAyBL,IAAzB;MACAG,WAAW,CAAC,IAAD,CAAX;IACD;EACF,CALD;;EAMA,OACE,KAAC,IAAD;IAAA,UACI,CAACD,QAAD,GAEF,MAAC,IAAD;MAAM,KAAK,EAAEI,MAAM,CAACC,SAApB;MAAA,WACD,KAAC,IAAD;QAAA;MAAA,EADC,EAED,KAAC,SAAD;QACA,KAAK,EAAED,MAAM,CAACE,SADd;QAEC,WAAW,EAAC,oBAFb;QAGC,YAAY,EAAET,WAHf;QAIC,KAAK,EAAED;MAJR,EAFC,EAUD,KAAC,SAAD;QACC,KAAK,EAAEQ,MAAM,CAACE,SADf;QAEC,WAAW,EAAC,yBAFb;QAGC,YAAY,EAAEP,OAHf;QAIC,KAAK,EAAED;MAJR,EAVC,EAkBA,KAAC,MAAD;QACI,OAAO,EAAEI,QADb;QAEI,KAAK,EAAC,aAFV;QAGI,KAAK,EAAC;MAHV,EAlBA;IAAA,EAFE,GA4BA,KAAC,IAAD;MAAM,MAAM,EAAET,MAAd;MAAsB,QAAQ,EAAEG,QAAhC;MAA0C,IAAI,EAAEE;IAAhD;EA7BJ,EADF;AAqCD;AAED,IAAMM,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CADG;IAETC,SAAS,EAAC,EAFD;IAGTC,eAAe,EAAE,MAHR;IAITC,UAAU,EAAE,QAJH;IAKTC,cAAc,EAAE;EALP,CADoB;EAQ/BP,SAAS,EAAC;IACRK,eAAe,EAAC,QADR;IAERG,OAAO,EAAC,CAFA;IAGRC,WAAW,EAAC,OAHJ;IAIRC,WAAW,EAAC,CAJJ;IAKRC,YAAY,EAAC;EALL;AARqB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}